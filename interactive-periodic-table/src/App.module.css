/* src/App.module.css */
.appContainer {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  overflow-x: hidden; /* Prevent horizontal scroll during transition */
  /* background-color: var(--bg-color); */ /* The body already has this. AppContainer can be transparent or use a var if different. */
  /* border: 1px solid lime; */ /* DEBUG BORDER - remove for production */
}

.mainContent {
  flex-grow: 1;
  width: 100%;
  display: flex;
  /* border: 1px solid blue; */ /* DEBUG BORDER - remove for production */
}

.tableArea {
  width: 100%; /* Initially takes full width of mainContent */
  min-width: 300px; /* Prevent it from becoming too small or zero width */
  padding: 20px; /* Spacing for content within tableArea */
  transition: width 0.3s ease-in-out, margin-right 0.3s ease-in-out;
  display: flex;
  flex-direction: column;
  align-items: center; /* Centers children like Legend, PeriodicTable if they are narrower */
  /* background-color: #f0f0f0; */ /* REMOVE THIS HARDCODED LIGHT COLOR or change to var(--panel-bg) or similar if it should be distinct from body */
  /* border: 1px solid red; */ /* DEBUG BORDER - remove for production */

  /* If .tableArea should have the main background color from the theme: */
  /* It will inherit from body if not set here. If you want it explicitly: */
  /* background-color: var(--bg-color); */
  /* Or if it's meant to be like a panel: */
  /* background-color: var(--panel-bg); */
}

/* This class is added to .mainContent in App.jsx when the panel is open */
.mainContentShifted .tableArea {
  margin-right: 370px; /* Push the tableArea to the left by panel_width + gap (e.g., 350px panel + 20px gap) */
  width: auto;         /* Allow .tableArea to naturally take the remaining space after the margin is applied */
}

/* Responsive adjustments */
@media (max-width: 900px) { /* Adjust this breakpoint as needed */
  .mainContentShifted .tableArea {
    margin-right: 0; /* No shift, panel overlays */
    width: 100%;     /* Back to full width */
  }
}

@media (max-width: 768px) {
  .tableArea {
    padding: 10px; /* Reduced padding for smaller screens */
    min-width: 280px; /* Adjust min-width for smaller screens */
    /* align-items: stretch; If you want children to stretch full width of tableArea */
  }
  /* .mainContentShifted .tableArea rule is already covered by the 900px media query
     if you want the same behavior (overlay). If different behavior, define it here.
     For now, it will inherit margin-right: 0; and width: 100%; from the 900px rule.
  */
}

/* --- Overlay Styles (Ensure these are defined somewhere, App.module.css or global.css) --- */
.appOverlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  /* Use a variable for the overlay color if you want it themeable too */
  /* background-color: var(--overlay-bg, rgba(0, 0, 0, 0.6)); */
  background-color: rgba(0, 0, 0, 0.6); /* Default semi-transparent black */
  z-index: 999;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.3s ease-in-out, visibility 0s linear 0.3s;
}

.appOverlay.visible {
  opacity: 1;
  visibility: visible;
  transition: opacity 0.3s ease-in-out, visibility 0s linear 0s;
}